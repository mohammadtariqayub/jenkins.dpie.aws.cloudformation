AWSTemplateFormatVersion: '2010-09-09'
Description: Cloudfront security group deployment

Parameters:
  Application:
    Type: String
    Default: arcgis
    Description: Name of the application that will be published via CloudFront

  AWSAccountSSMParameter:
    Type: "AWS::SSM::Parameter::Value<String>"
    Description:  Leave as default.! SSM parameter name that has Account alias value.
    Default: AccountAlias
    AllowedValues:
      - AccountAlias  

  Comments:
    Type: String
    Description: Description, notes or comments
    Default: xxxxx  
  
  DeploymentBucket:
    Type: String
    Description: S3 Bucket name
    Default: xxxxx    
    
  ProjectCode:
    Type: String
    Description: A valid Project Code number.
    Default: XXXXX

  Environment:
    Type: String
    Description: Environment type. eg, prd
    Default: tst
    ConstraintDescription: Valid Name
    AllowedValues:
      - tst
      - dev
      - prd

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: Enter the VPCId that the system will be deployed to
    
  SystemOwner:
    Description: Email address of the system owner
    Type: String
    Default: xxx@industry.nsw.gov.au
    
Resources:
  GlobalCloudfrontSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Join ["-",[!Ref Application, !Ref Environment, "cloudfront_g"]]
      GroupDescription: Global Cloudfront security group
      VpcId: !Ref VpcId
      Tags:
      - Key: AWSAccount 
        Value: !Ref AWSAccountSSMParameter
      - Key: Comments 
        Value: !Ref Comments  
      - Key: Environment 
        Value: !Ref Environment
      - Key: ProjectCode 
        Value: !Ref ProjectCode                            
      - Key: Name
        Value: !Join ["-",[!Ref Application, !Ref Environment, "cloudfront_g"]]
      - Key: AutoUpdate 
        Value:  true
      - Key: Protocol 
        Value: https
      - Key: CFNTemplate
        Value: cloudfront-elb-security-groups.yml
      - Key: SystemOwner
        Value: !Ref SystemOwner     
        
  RegionalCloudfrontSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    DependsOn: GlobalCloudfrontSecurityGroup
    Properties:
      GroupName: !Join ["-",[!Ref Application, !Ref Environment, "cloudfront_r"]]
      GroupDescription: Regional Cloudfront security group
      VpcId: !Ref VpcId
      Tags:
      - Key: AWSAccount 
        Value: !Ref AWSAccountSSMParameter
      - Key: Comments 
        Value: !Ref Comments  
      - Key: Environment 
        Value: !Ref Environment
      - Key: ProjectCode 
        Value: !Ref ProjectCode                            
      - Key: Name
        Value: !Join ["-",[!Ref Application, !Ref Environment, "cloudfront_r"]]
      - Key: AutoUpdate 
        Value:  true
      - Key: Protocol 
        Value: https
      - Key: CFNTemplate
        Value: cloudfront-elb-security-groups.yml
      - Key: SystemOwner
        Value: !Ref SystemOwner

        
        
  AutoUpdateSecurityGroupFunctionIAMRole:
    Type: "AWS::IAM::Role"
    DependsOn: RegionalCloudfrontSecurityGroup
    Properties:
      RoleName: !Join ["-",[!Ref Application, "cloudfront-ip-autoupdate-lambda-role"]]
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: !Join ["-",[!Ref Application, "cloudfront-ip-autoupdate-lambda-role-policy"]]
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Sid: AllowLambdaFunctionDescribeSecurityGroups
                Effect: "Allow"
                Action:
                  - "ec2:DescribeSecurityGroups"
                Resource: "*"
              -
                Sid: AllowLambdaFunctionModifySecurityGroups
                Effect: "Allow"
                Action:
                  - "ec2:AuthorizeSecurityGroupIngress"
                  - "ec2:RevokeSecurityGroupIngress"
                Resource:
                  - !Join
                      - ''
                      - - "arn:aws:ec2:"
                        - !Ref AWS::Region
                        - ":"
                        - !Ref AWS::AccountId
                        - ":security-group/"
                        - !GetAtt GlobalCloudfrontSecurityGroup.GroupId
                  - !Join                    
                    - ''
                    - - "arn:aws:ec2:"
                      - !Ref AWS::Region
                      - ":"
                      - !Ref AWS::AccountId
                      - ":security-group/"
                      - !GetAtt RegionalCloudfrontSecurityGroup.GroupId
              -
                Sid: AllowLambdaFunctionReadCreateLogs
                Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - "arn:aws:logs:*:*:*"
              -
                Sid: AllowLambdaFunctionListAndGetObjectsInS3Bucket
                Effect: "Allow"
                Action:
                  - "s3:GetObject"
                Resource:
                  - !Join ["",["arn:aws:s3:::", !Ref "DeploymentBucket","/*"]]

  AutoUpdateSecurityGroupFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      FunctionName: !Join ["-",[!Ref Application, "cloudfront-iprange-autoupdate-function"]]
      Description: Lambda Function to Auto-Update ALB Security Group
      Handler: "update_security_groups.lambda_handler"
      Environment:
        Variables:
          global_group_name: !Join ["-",[!Ref Application, !Ref Environment, "cloudfront_g"]]
          regional_group_name: !Join ["-",[!Ref Application, !Ref Environment, "cloudfront_r"]]
      Role:
        Fn::GetAtt:
          - "AutoUpdateSecurityGroupFunctionIAMRole"
          - "Arn"
      Code:
        S3Bucket: !Ref "DeploymentBucket"
        S3Key: "autoupdatesecgroups/code/update_security_groups.zip"
      Runtime: "python2.7"
      Timeout: "10"
      Tags:
        - Key: SystemOwner
          Value: !Ref SystemOwner
        - Key: Application
          Value: !Ref Application
        - Key: ProjectCode
          Value: !Ref ProjectCode
        - Key: AWSAccount
          Value: !Ref AWSAccountSSMParameter                               
          
  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref AutoUpdateSecurityGroupFunction
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn: arn:aws:sns:us-east-1:806199016981:AmazonIpSpaceChanged